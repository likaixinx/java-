<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jgs.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.jgs.pojo.Employee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="employee_name" jdbcType="VARCHAR" property="employeeName" />
    <result column="employee_age" jdbcType="INTEGER" property="employeeAge" />
    <result column="employee_hobby" jdbcType="VARCHAR" property="employeeHobby" />
    <result column="employee_sex" jdbcType="CHAR" property="employeeSex" />
    <result column="employee_dept" jdbcType="VARCHAR" property="employeeDept" />
    <result column="employee_brief" jdbcType="VARCHAR" property="employeeBrief" />
    <result column="employee_did" jdbcType="INTEGER" property="employeeDid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, employee_name, employee_age, employee_hobby, employee_sex, employee_dept, employee_brief, 
    employee_did
  </sql>
  <select id="selectByExample" parameterType="com.jgs.pojo.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jgs.pojo.EmployeeExample">
    delete from t_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jgs.pojo.Employee">
    insert into t_employee (id, employee_name, employee_age, 
      employee_hobby, employee_sex, employee_dept, 
      employee_brief, employee_did)
    values (#{id,jdbcType=INTEGER}, #{employeeName,jdbcType=VARCHAR}, #{employeeAge,jdbcType=INTEGER}, 
      #{employeeHobby,jdbcType=VARCHAR}, #{employeeSex,jdbcType=CHAR}, #{employeeDept,jdbcType=VARCHAR}, 
      #{employeeBrief,jdbcType=VARCHAR}, #{employeeDid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jgs.pojo.Employee">
    insert into t_employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="employeeName != null">
        employee_name,
      </if>
      <if test="employeeAge != null">
        employee_age,
      </if>
      <if test="employeeHobby != null">
        employee_hobby,
      </if>
      <if test="employeeSex != null">
        employee_sex,
      </if>
      <if test="employeeDept != null">
        employee_dept,
      </if>
      <if test="employeeBrief != null">
        employee_brief,
      </if>
      <if test="employeeDid != null">
        employee_did,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="employeeName != null">
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeeAge != null">
        #{employeeAge,jdbcType=INTEGER},
      </if>
      <if test="employeeHobby != null">
        #{employeeHobby,jdbcType=VARCHAR},
      </if>
      <if test="employeeSex != null">
        #{employeeSex,jdbcType=CHAR},
      </if>
      <if test="employeeDept != null">
        #{employeeDept,jdbcType=VARCHAR},
      </if>
      <if test="employeeBrief != null">
        #{employeeBrief,jdbcType=VARCHAR},
      </if>
      <if test="employeeDid != null">
        #{employeeDid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jgs.pojo.EmployeeExample" resultType="java.lang.Long">
    select count(*) from t_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_employee
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.employeeName != null">
        employee_name = #{row.employeeName,jdbcType=VARCHAR},
      </if>
      <if test="row.employeeAge != null">
        employee_age = #{row.employeeAge,jdbcType=INTEGER},
      </if>
      <if test="row.employeeHobby != null">
        employee_hobby = #{row.employeeHobby,jdbcType=VARCHAR},
      </if>
      <if test="row.employeeSex != null">
        employee_sex = #{row.employeeSex,jdbcType=CHAR},
      </if>
      <if test="row.employeeDept != null">
        employee_dept = #{row.employeeDept,jdbcType=VARCHAR},
      </if>
      <if test="row.employeeBrief != null">
        employee_brief = #{row.employeeBrief,jdbcType=VARCHAR},
      </if>
      <if test="row.employeeDid != null">
        employee_did = #{row.employeeDid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_employee
    set id = #{row.id,jdbcType=INTEGER},
      employee_name = #{row.employeeName,jdbcType=VARCHAR},
      employee_age = #{row.employeeAge,jdbcType=INTEGER},
      employee_hobby = #{row.employeeHobby,jdbcType=VARCHAR},
      employee_sex = #{row.employeeSex,jdbcType=CHAR},
      employee_dept = #{row.employeeDept,jdbcType=VARCHAR},
      employee_brief = #{row.employeeBrief,jdbcType=VARCHAR},
      employee_did = #{row.employeeDid,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jgs.pojo.Employee">
    update t_employee
    <set>
      <if test="employeeName != null">
        employee_name = #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeeAge != null">
        employee_age = #{employeeAge,jdbcType=INTEGER},
      </if>
      <if test="employeeHobby != null">
        employee_hobby = #{employeeHobby,jdbcType=VARCHAR},
      </if>
      <if test="employeeSex != null">
        employee_sex = #{employeeSex,jdbcType=CHAR},
      </if>
      <if test="employeeDept != null">
        employee_dept = #{employeeDept,jdbcType=VARCHAR},
      </if>
      <if test="employeeBrief != null">
        employee_brief = #{employeeBrief,jdbcType=VARCHAR},
      </if>
      <if test="employeeDid != null">
        employee_did = #{employeeDid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jgs.pojo.Employee">
    update t_employee
    set employee_name = #{employeeName,jdbcType=VARCHAR},
      employee_age = #{employeeAge,jdbcType=INTEGER},
      employee_hobby = #{employeeHobby,jdbcType=VARCHAR},
      employee_sex = #{employeeSex,jdbcType=CHAR},
      employee_dept = #{employeeDept,jdbcType=VARCHAR},
      employee_brief = #{employeeBrief,jdbcType=VARCHAR},
      employee_did = #{employeeDid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>